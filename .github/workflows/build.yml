name: Build & Deploy
on:
  push:
    branches:
      - master
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository}}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
      version: ${{ steps.meta.outputs.version }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: superfly/flyctl-actions/setup-flyctl@v1
      - run: flyctl auth docker
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            registry.fly.io/andridk
          tags: |
            type=sha,format:long
            type=ref,event=branch
            type=ref,event=pr

      - uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            MODEL_BOX_API_KEY=${{ secrets.MODEL_BOX_API_KEY }}
  deploy-fly:
    name: Deploy to Fly.io
    needs: build
    uses: ./.github/workflows/deploy-fly.yml
    with:
      app_name: andridk
      image: ${{ needs.build.outputs.image }}
    secrets:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  deploy-ogre:
    name: Deploy to Ogre
    needs: build
    uses: ./.github/workflows/deploy-ogre.yml
    with:
      image_tag: ${{ needs.build.outputs.version }}
    secrets:
      GITOPS_HOST: ${{ secrets.GITOPS_HOST }}
      GITOPS_USER: ${{ secrets.GITOPS_USER }}
      OGRE_GITOPS_KEY: ${{ secrets.OGRE_GITOPS_KEY }}
      OGRE_GITOPS_HOST_FINGERPRINT: ${{ secrets.OGRE_GITOPS_HOST_FINGERPRINT }}
