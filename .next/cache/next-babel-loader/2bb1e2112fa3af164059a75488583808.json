{"ast":null,"code":"var _jsxFileName = \"/home/andri/git/andri.dk/src/components/skills/skills.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useMemo } from \"react\";\nimport { FaHeart } from \"react-icons/fa\";\nimport { durationForSkill } from \"../../lib/skills\";\nexport function SkillDataTransform({\n  workSkills,\n  rootSkills,\n  children\n}) {\n  const categories = useMemo(() => {\n    const sortedCategories = rootSkills.map(c => {\n      const nk = c.keywords.map(k => {\n        return {\n          name: k,\n          // score is currently just duration\n          score: workSkills && durationForSkill(workSkills, k) || 0\n        };\n      }).sort((a, b) => {\n        return b.score - a.score;\n      });\n      return _objectSpread(_objectSpread({}, c), {}, {\n        keywords: nk\n      });\n    });\n    return sortedCategories;\n  }, [workSkills, rootSkills]);\n  return children(categories);\n}\nexport function Skills({\n  categories,\n  focus = []\n}) {\n  if (!categories) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    className: \"flex flex-row flex-wrap justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, categories.map(c => __jsx(\"div\", {\n    key: c.name,\n    className: \"w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 flex flex-col p-6 md:p-0 mb-4 lg:mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"font-light uppercase text-base mb-4\",\n    style: {\n      color: c.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, c.name), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, c.keywords && c.keywords.map(s => __jsx(\"span\", {\n    key: s.name,\n    className: \"andri-tag\",\n    style: {\n      backgroundColor: c.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, s.name, focus.includes(s.name) ? __jsx(FaHeart, {\n    className: \"ml-2 inline text-red-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }) : null))))));\n}","map":{"version":3,"sources":["/home/andri/git/andri.dk/src/components/skills/skills.js"],"names":["React","useMemo","FaHeart","durationForSkill","SkillDataTransform","workSkills","rootSkills","children","categories","sortedCategories","map","c","nk","keywords","k","name","score","sort","a","b","Skills","focus","color","s","backgroundColor","includes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAA5B,EAAkE;AACvE,QAAMC,UAAU,GAAGP,OAAO,CAAC,MAAM;AAC/B,UAAMQ,gBAAgB,GAAGH,UAAU,CAACI,GAAX,CAAgBC,CAAD,IAAO;AAC7C,YAAMC,EAAE,GAAGD,CAAC,CAACE,QAAF,CACRH,GADQ,CACHI,CAAD,IAAO;AACV,eAAO;AACLC,UAAAA,IAAI,EAAED,CADD;AAEL;AACAE,UAAAA,KAAK,EAAGX,UAAU,IAAIF,gBAAgB,CAACE,UAAD,EAAaS,CAAb,CAA/B,IAAmD;AAHrD,SAAP;AAKD,OAPQ,EAQRG,IARQ,CAQH,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACd,eAAOA,CAAC,CAACH,KAAF,GAAUE,CAAC,CAACF,KAAnB;AACD,OAVQ,CAAX;AAWA,6CACKL,CADL;AAEEE,QAAAA,QAAQ,EAAED;AAFZ;AAID,KAhBwB,CAAzB;AAkBA,WAAOH,gBAAP;AACD,GApByB,EAoBvB,CAACJ,UAAD,EAAaC,UAAb,CApBuB,CAA1B;AAsBA,SAAOC,QAAQ,CAACC,UAAD,CAAf;AACD;AAED,OAAO,SAASY,MAAT,CAAgB;AAAEZ,EAAAA,UAAF;AAAca,EAAAA,KAAK,GAAG;AAAtB,CAAhB,EAA4C;AACjD,MAAI,CAACb,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,UAAU,CAACE,GAAX,CAAgBC,CAAD,IACd;AACE,IAAA,GAAG,EAAEA,CAAC,CAACI,IADT;AAEE,IAAA,SAAS,EAAC,yEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AACE,IAAA,SAAS,EAAC,qCADZ;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAEX,CAAC,CAACW;AAAX,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGX,CAAC,CAACI,IAJL,CAJF,EAUE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CAACE,QAAF,IACCF,CAAC,CAACE,QAAF,CAAWH,GAAX,CAAgBa,CAAD,IACb;AACE,IAAA,GAAG,EAAEA,CAAC,CAACR,IADT;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,KAAK,EAAE;AACLS,MAAAA,eAAe,EAAEb,CAAC,CAACW;AADd,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGC,CAAC,CAACR,IAPL,EAQGM,KAAK,CAACI,QAAN,CAAeF,CAAC,CAACR,IAAjB,IACC,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAEG,IAVN,CADF,CAFJ,CAVF,CADD,CADH,CADF;AAkCD","sourcesContent":["import React, { useMemo } from \"react\";\r\n\r\nimport { FaHeart } from \"react-icons/fa\";\r\nimport { durationForSkill } from \"../../lib/skills\";\r\n\r\nexport function SkillDataTransform({ workSkills, rootSkills, children }) {\r\n  const categories = useMemo(() => {\r\n    const sortedCategories = rootSkills.map((c) => {\r\n      const nk = c.keywords\r\n        .map((k) => {\r\n          return {\r\n            name: k,\r\n            // score is currently just duration\r\n            score: (workSkills && durationForSkill(workSkills, k)) || 0,\r\n          };\r\n        })\r\n        .sort((a, b) => {\r\n          return b.score - a.score;\r\n        });\r\n      return {\r\n        ...c,\r\n        keywords: nk,\r\n      };\r\n    });\r\n\r\n    return sortedCategories;\r\n  }, [workSkills, rootSkills]);\r\n\r\n  return children(categories);\r\n}\r\n\r\nexport function Skills({ categories, focus = [] }) {\r\n  if (!categories) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className=\"flex flex-row flex-wrap justify-between\">\r\n      {categories.map((c) => (\r\n        <div\r\n          key={c.name}\r\n          className=\"w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 flex flex-col p-6 md:p-0 mb-4 lg:mb-0\"\r\n        >\r\n          <h2\r\n            className=\"font-light uppercase text-base mb-4\"\r\n            style={{ color: c.color }}\r\n          >\r\n            {c.name}\r\n          </h2>\r\n          <div className=\"\">\r\n            {c.keywords &&\r\n              c.keywords.map((s) => (\r\n                <span\r\n                  key={s.name}\r\n                  className=\"andri-tag\"\r\n                  style={{\r\n                    backgroundColor: c.color,\r\n                  }}\r\n                >\r\n                  {s.name}\r\n                  {focus.includes(s.name) ? (\r\n                    <FaHeart className=\"ml-2 inline text-red-700\" />\r\n                  ) : null}\r\n                </span>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}