{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/andri/git/andri.dk/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/andri/git/andri.dk/src/components/seo.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n      site {\\n        siteMetadata {\\n          siteUrl\\n          title\\n          description\\n          social {\\n            twitter\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Helmet from \"react-helmet\";\nimport defaultMetaImage from \"../../static/img/default-og-image.png\"; // Borrowed from https://github.com/kentcdodds/kentcdodds.com/blob/master/src/components/seo/index.js\n// Thanks Kent\n\nexport var SEO = function SEO(_ref) {\n  _s();\n\n  var postData = _ref.postData,\n      _ref$frontmatter = _ref.frontmatter,\n      frontmatter = _ref$frontmatter === void 0 ? {} : _ref$frontmatter,\n      metaImage = _ref.metaImage,\n      isBlogPost = _ref.isBlogPost;\n  var data = useStaticQuery(graphql(_templateObject()));\n  var seo = data.site.siteMetadata;\n  var postMeta = frontmatter || postData.childMarkdownRemark.frontmatter || {};\n  var title = postMeta.title || seo.title;\n  var description = postMeta.plainTextDescription || postMeta.description || seo.description;\n  var image = \"\".concat(seo.siteUrl, \"/\").concat(postData && postData.fields.socialcard || defaultMetaImage);\n  var url = postMeta.path ? \"\".concat(seo.siteUrl).concat(postMeta.path) : seo.siteUrl;\n  return __jsx(React.Fragment, null, __jsx(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"meta\", {\n    name: \"description\",\n    content: description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"image\",\n    content: image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), isBlogPost ? __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"article\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }) : null, __jsx(\"meta\", {\n    property: \"og:title\",\n    content: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:creator\",\n    content: seo.social.twitter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    name: \"twitter:image\",\n    content: image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(SEO, \"2NJItrGYEZzfj2zyg3qTWGZLI2Q=\", false, function () {\n  return [useStaticQuery];\n});\n\n_c = SEO;\n\nvar _c;\n\n$RefreshReg$(_c, \"SEO\");","map":{"version":3,"sources":["/home/andri/git/andri.dk/src/components/seo.js"],"names":["React","useStaticQuery","graphql","Helmet","defaultMetaImage","SEO","postData","frontmatter","metaImage","isBlogPost","data","seo","site","siteMetadata","postMeta","childMarkdownRemark","title","description","plainTextDescription","image","siteUrl","fields","socialcard","url","path","social","twitter"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\nimport Helmet from \"react-helmet\";\r\nimport defaultMetaImage from \"../../static/img/default-og-image.png\";\r\n\r\n// Borrowed from https://github.com/kentcdodds/kentcdodds.com/blob/master/src/components/seo/index.js\r\n// Thanks Kent\r\nexport const SEO = ({ postData, frontmatter = {}, metaImage, isBlogPost }) => {\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      site {\r\n        siteMetadata {\r\n          siteUrl\r\n          title\r\n          description\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const {\r\n    site: { siteMetadata: seo },\r\n  } = data;\r\n  const postMeta =\r\n    frontmatter || postData.childMarkdownRemark.frontmatter || {};\r\n  const title = postMeta.title || seo.title;\r\n  const description =\r\n    postMeta.plainTextDescription || postMeta.description || seo.description;\r\n  const image = `${seo.siteUrl}/${\r\n    (postData && postData.fields.socialcard) || defaultMetaImage\r\n  }`;\r\n  const url = postMeta.path ? `${seo.siteUrl}${postMeta.path}` : seo.siteUrl;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <title>{title}</title>\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={url} />\r\n        {isBlogPost ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta name=\"twitter:creator\" content={seo.social.twitter} />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}