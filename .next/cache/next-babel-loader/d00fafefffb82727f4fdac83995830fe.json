{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction durationForWork(work) {\n  var start = work.startDate && new Date(work.startDate);\n  var end = work.endDate && new Date(work.endDate) || new Date();\n  var diff = (end.getTime() - start.getTime()) / 1000 / 60 / 60 / 24 / 365;\n  return Math.floor(diff);\n}\n\nfunction durationForSkill(work, skill) {\n  var sum = 0;\n\n  var _iterator = _createForOfIteratorHelper(work),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var w = _step.value;\n      var dur = durationForWork(w);\n\n      if (w.skills && w.skills.indexOf(skill) !== -1) {\n        sum += dur;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return sum;\n}\n\nmodule.exports = {\n  durationForSkill: durationForSkill,\n  durationForWork: durationForWork\n};","map":{"version":3,"sources":["/home/andri/git/andri.dk/src/lib/skills.js"],"names":["durationForWork","work","start","startDate","Date","end","endDate","diff","getTime","Math","floor","durationForSkill","skill","sum","w","dur","skills","indexOf","module","exports"],"mappings":";;;;;;AAAA,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,MAAMC,KAAK,GAAGD,IAAI,CAACE,SAAL,IAAkB,IAAIC,IAAJ,CAASH,IAAI,CAACE,SAAd,CAAhC;AACA,MAAME,GAAG,GAAIJ,IAAI,CAACK,OAAL,IAAgB,IAAIF,IAAJ,CAASH,IAAI,CAACK,OAAd,CAAjB,IAA4C,IAAIF,IAAJ,EAAxD;AAEA,MAAMG,IAAI,GAAG,CAACF,GAAG,CAACG,OAAJ,KAAgBN,KAAK,CAACM,OAAN,EAAjB,IAAoC,IAApC,GAA2C,EAA3C,GAAgD,EAAhD,GAAqD,EAArD,GAA0D,GAAvE;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACD;;AAED,SAASI,gBAAT,CAA0BV,IAA1B,EAAgCW,KAAhC,EAAuC;AACrC,MAAIC,GAAG,GAAG,CAAV;;AADqC,6CAErBZ,IAFqB;AAAA;;AAAA;AAErC,wDAAsB;AAAA,UAAXa,CAAW;AACpB,UAAMC,GAAG,GAAGf,eAAe,CAACc,CAAD,CAA3B;;AACA,UAAIA,CAAC,CAACE,MAAF,IAAYF,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBL,KAAjB,MAA4B,CAAC,CAA7C,EAAgD;AAC9CC,QAAAA,GAAG,IAAIE,GAAP;AACD;AACF;AAPoC;AAAA;AAAA;AAAA;AAAA;;AAQrC,SAAOF,GAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA,gBAAgB,EAAhBA,gBADe;AAEfX,EAAAA,eAAe,EAAfA;AAFe,CAAjB","sourcesContent":["function durationForWork(work) {\n  const start = work.startDate && new Date(work.startDate);\n  const end = (work.endDate && new Date(work.endDate)) || new Date();\n\n  const diff = (end.getTime() - start.getTime()) / 1000 / 60 / 60 / 24 / 365;\n  return Math.floor(diff);\n}\n\nfunction durationForSkill(work, skill) {\n  let sum = 0;\n  for (const w of work) {\n    const dur = durationForWork(w);\n    if (w.skills && w.skills.indexOf(skill) !== -1) {\n      sum += dur;\n    }\n  }\n  return sum;\n}\n\nmodule.exports = {\n  durationForSkill,\n  durationForWork\n};\n"]},"metadata":{},"sourceType":"script"}