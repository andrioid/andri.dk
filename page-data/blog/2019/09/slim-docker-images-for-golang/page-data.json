{"componentChunkName":"component---src-layouts-blog-post-tsx","path":"/blog/2019/09/slim-docker-images-for-golang","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://andri.dk","title":"andri.dk","description":"I make websites, create apps, manage infrastructure, develop products and more.","social":{"twitter":"andrioid"}}},"markdownRemark":{"html":"<p>How to build a slim Docker container for your Go application using multi-stage images.</p>\n<p>I'm using Go 1.13 and the community module proxy to build the binary and Alpine as a base image. It adds a user and group instead of running as root.</p>\n<h3 id=\"dockerfile\" style=\"position:relative;\"><a href=\"#dockerfile\" aria-label=\"dockerfile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerfile</h3>\n<p>Be sure to replace \"cmd/server/server.go\" with your main file.</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> golang<span class=\"token punctuation\">:</span>1.13 as builder\r\n\r\n<span class=\"token keyword\">WORKDIR</span> /app\r\n<span class=\"token keyword\">COPY</span> . /app\r\n<span class=\"token keyword\">RUN</span> CGO_ENABLED=0 GOOS=linux GOPROXY=https<span class=\"token punctuation\">:</span>//proxy.golang.org go build <span class=\"token punctuation\">-</span>o app cmd/server/server.go\r\n\r\n<span class=\"token keyword\">FROM</span> alpine<span class=\"token punctuation\">:</span>latest\r\n<span class=\"token comment\"># mailcap adds mime detection and ca-certificates help with TLS (basic stuff)</span>\r\n<span class=\"token keyword\">RUN</span> apk <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>no<span class=\"token punctuation\">-</span>cache add ca<span class=\"token punctuation\">-</span>certificates mailcap &amp;&amp; addgroup <span class=\"token punctuation\">-</span>S app &amp;&amp; adduser <span class=\"token punctuation\">-</span>S app <span class=\"token punctuation\">-</span>G app\r\n<span class=\"token keyword\">USER</span> app\r\n<span class=\"token keyword\">WORKDIR</span> /app\r\n<span class=\"token keyword\">COPY</span> <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>from=builder /app/app .\r\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"./app\"</span> <span class=\"token punctuation\">]</span></code></pre></div>\n<p>I hope this is helpful. I mostly blogged this to document it for myself.</p>","excerpt":"How to build a slim Docker container for your Go application using multi-stage images. I'm using Go 1.13 and the community module proxy to build the binary and Alpine as a base image. It adds a user and group instead of running as root. Dockerfile Beâ€¦","fields":{"title":"Slim Docker images for your Go application","date":"2019-09-06T00:00:00.000Z","tags":["hosting","docker","golang"],"slug":"/blog/2019/09/slim-docker-images-for-golang","socialcard":"gatsby-plugin-social-card/5832f6a5-fa94-5899-972d-8ac5428dd6c3.jpg"},"frontmatter":{"date":"September 06, 2019","cover":null}}},"pageContext":{}},"staticQueryHashes":["1686816705","3794076007"]}