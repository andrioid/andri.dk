---
// Find all blog posts to generate
import { type CollectionEntry } from "astro:content";
import Layout from "~/layouts/Layout.astro";
import { IS_DEV } from "../../lib/utils/dev";
import PageContainer from "~/layouts/page-container.astro";
import {
  getCollection,
  getEntry,
  type ContentCollectionKey,
} from "astro:content";

interface Props {
  post: CollectionEntry<"blog">;
}
const { post } = Astro.props;
const { Content } = (await post.render?.()) ?? {};
const { date, title, description, draft, tags } = post.data;

export async function getStaticPaths() {
  const entries = await getCollection("blog");
  return entries.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
---

<Layout
  title={title}
  description={description}
  subtitle={description}
  blogPost={post}
>
  <PageContainer isHome={false}>
    <div
      class="pt-4 bg-gray-200 py-2 md:py-10 md:px-10 md:flex md:flex-grow justify-center"
    >
      <div class="bg-white py-10 shadow px-5 lg:px-10 flex-1 lg:max-w-6xl">
        <div>
          <h1>
            {title}
          </h1>
          <div class="text-base text-gray-600 flex justify-start mb-4">
            <p>
              {
                date.toLocaleDateString(undefined, {
                  year: "numeric",
                  month: "short",
                  day: "numeric",
                })
              }
            </p>
          </div>
          <div class="mb-4 flex gap-2">
            {
              tags &&
                tags.map((t) => (
                  <span class="text-sm rounded-md text-black border-black border py-1 px-2">
                    {t}
                  </span>
                ))
            }
          </div>
        </div>

        <article class="mb-6 prose lg:prose-lg">
          {Content && <Content />}
        </article>

        <p>&nbsp;</p>
      </div>
    </div>
  </PageContainer>
</Layout>
